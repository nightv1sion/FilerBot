services:
  filer.telegram-bot:
    container_name: Filer.TelegramBot
    build:
      context: .
      dockerfile: Microservices/TelegramBot/Filer.TelegramBot.Presentation/Dockerfile
    ports:
      - "7000:8080"
    environment:
      TelegramIntegration__BotConfiguration__BotToken: $TELEGRAM_BOT_TOKEN
      Integration__Storage__Uri: http://filer.storage:8080
      ConnectionStrings__Database: Host=filer.postgres;Port=5432;Database=filer.telegram-bot;Username=postgres;Password=postgres;
    labels:
      com.jetbrains.rider.debug: "true"

  filer.storage:
    container_name: Filer.Storage
    build:
      context: .
      dockerfile: Microservices/Storage/Filer.Storage/Dockerfile
    ports:
      - "7100:8080"
    environment:
      ConnectionStrings__Database: Host=filer.postgres;Port=5432;Database=filer.storage;Username=postgres;Password=postgres;
      Minio__Endpoint: filer.minio:9000
      Minio__AccessKey: minio
      Minio__SecretKey: minio123
    labels:
      com.jetbrains.rider.debug: "true"

  filer.minio:
    image: quay.io/minio/minio:latest
    container_name: Filer.Minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: minio server /minio-data --console-address :9090
    ports:
      - 9000:9000
      - 9090:9090
    volumes:
      - minio-data:/data

  filer.postgres:
    image: postgres:17
    container_name: Filer.Postgres
    environment:
      - POSTGRES_DB=planner
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/db:/var/lib/postgresql/data
    ports:
      - 5432:5432

volumes:
  minio-data:
